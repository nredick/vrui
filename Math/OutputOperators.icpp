/***********************************************************************
OutputOperators - Basic iostream output operators for Math objects.
Copyright (c) 2022 Oliver Kreylos

This file is part of the Templatized Math Library (Math).

The Templatized Math Library is free software; you can redistribute it
and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation; either version 2 of the
License, or (at your option) any later version.

The Templatized Math Library is distributed in the hope that it will be
useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License along
with the Templatized Math Library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
***********************************************************************/

#define MATH_OUTPUTOPERATORS_IMPLEMENTATION

#include <Math/OutputOperators.h>

#include <Math/Complex.h>
#include <Math/Interval.h>
#include <Math/BrokenLine.h>

namespace std {

template <class ScalarParam>
inline
ostream&
operator<<(
	ostream& os,
	const Math::Complex<ScalarParam>& value)
	{
	/* Encode the complex number in the form real+imag*i: */
	bool haveImag=value.getImag()!=ScalarParam(0);
	bool haveReal=!haveImag||value.getReal()!=ScalarParam(0);
	
	if(haveReal)
		os<<value.getReal();
	if(haveReal&&haveImag&&value.getImag()>=ScalarParam(0))
		os<<'+';
	if(haveImag)
		os<<value.getImag()<<"*i";
	
	return os;
	}

template <class ScalarParam>
inline
ostream&
operator<<(
	ostream& os,
	const Math::Interval<ScalarParam>& value)
	{
	os<<'['<<value.getMin()<<", "<<value.getMax()<<']';
	
	return os;
	}

template <class ScalarParam>
inline
ostream&
operator<<(
	ostream& os,
	const Math::BrokenLine<ScalarParam>& value)
	{
	os<<'('<<value.min<<", "<<value.deadMin<<", "<<value.deadMax<<", "<<value.max<<')';
	
	return os;
	}

}
